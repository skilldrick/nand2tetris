// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Screen.jack

/**
 * A library of functions for displaying graphics on the screen.
 * The Hack physical screen consists of 512 rows (indexed 0..511, top to bottom)
 * of 256 pixels each (indexed 0..255, left to right). The top left pixel on 
 * the screen is indexed (0,0).
 */
class Screen {
    static int baseAddress;
    static Array bits;

    /** Initializes the Screen. */
    function void init() {
      var int i, x;

      let baseAddress = 16384;
      let bits = Array.new(16);

      let i = 0;
      let x = 1;

      while (i < 16) {
        let bits[i] = x;
        let i = i + 1;
        let x = x * 2;
      }
      return;
    }

    /** Erases the entire screen. */
    function void clearScreen() {
      
    }

    /** Sets the current color, to be used for all subsequent drawXXX commands.
     *  Black is represented by true, white by false. */
    function void setColor(boolean b) {
    }

    /** Draws the (x,y) pixel, using the current color. */
    function void drawPixel(int x, int y) {
      var int address, value, bit;
      let address = baseAddress + (32 * y) + x / 16;
      let bit = x % 16;
      let value = Memory.peek(address);
      let value = value | bits[bit];

      do Memory.poke(address, value);
      return;
    }

    /** Draws a line from pixel (x1,y1) to pixel (x2,y2), using the current color. */
    function void drawLine(int x1, int y1, int x2, int y2) {
    }

    /** Draws a filled rectangle whose top left corner is (x1, y1)
     * and bottom right corner is (x2,y2), using the current color. */
    function void drawRectangle(int x1, int y1, int x2, int y2) {
    }

    /** Draws a filled circle of radius r<=181 around (x,y), using the current color. */
    function void drawCircle(int x, int y, int r) {
    }
}
